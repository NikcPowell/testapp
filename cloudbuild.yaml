# Copyright 2021 Google LLC
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file and other cloudbuild.yaml files are used to ensure that
# our public Docker images such as gcr.io/google-samples/hello-app:1.0
# are rebuilt and updated upon changes to the repository.
# In this directory, run the following command to build this builder.
# $ gcloud builds submit . --config=cloudbuild.yaml

steps:
# Pull the latest gcloud image.
#- name: 'gcr.io/cloud-builders/docker'
 # args: ['pull', 'gcr.io/cloud-builders/gcloud']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--tag=gcr.io/$PROJECT_ID/git', '.']

# Clone a public repo and write its revision to a VERSION file.
- name: 'gcr.io/$PROJECT_ID/git'
  args: ['clone', 'https://github.com/GoogleCloudPlatform/cloud-builders.git']
  dir: 'examples/version-file'
# The Dockerfile here uses this git builder as its base image.
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '--tag=version_file', '.']
  dir: 'examples/version-file'
- name: 'version_file'
  args: ['VERSION']
  dir: 'examples/version-file/cloud-builders'
# Prove that the file exists.
- name: 'alpine'
  args: ['ash', '-c', 'echo "Version: $(cat VERSION)"']
  dir: 'examples/version-file/cloud-builders'

# Set a global configuration and check that it's persisted.
# This configuration won't be included in the resulting builder image.
#- name: 'gcr.io/$PROJECT_ID/git'
 # args: ['config', '--global', 'test.foo', 'bar']
#- name: 'gcr.io/$PROJECT_ID/git'
 # entrypoint: 'bash'
  #args: ['-c', 'git config --global --get test.foo | grep ^bar$']

# Clone a private repo belonging to the project.
#- name: 'gcr.io/$PROJECT_ID/git'
 # args: ['clone', 'https://source.developers.google.com/p/$PROJECT_ID/r/default']

#images: ['gcr.io/$PROJECT_ID/git']
#steps:

# Build hello-app:1.0.
#- name: 'gcr.io/cloud-builders/docker'
 # args:
  #  - 'build'
   # - '-t'
   # - 'gcr.io/hello-app:1.1'
   # - '-t'
   # - 'us-docker.pkg.dev/gke/hello-app:1.1'
   # - '.'
  # dir: 'hello-app'

# Create back-up of main.go and replace "Version: 1.0.0" with "Version: 2.0.0".
#- name: 'bash'
 # args:
  #  - '-c'
   # - 'cp -p hello-app/main.go hello-app/main.go.bak && sed "s/Version: 1.0.0/Version: 2.0.0/g" hello-app/main.go.bak > hello-app/main.go'

# Build hello-app:2.0.
#- name: 'gcr.io/cloud-builders/docker'
 # args:
  #  - 'build'
   # - '-t'
    #- 'gcr.io/google-samples/hello-app:2.0'
    #- '-t'
    #- 'us-docker.pkg.dev/google-samples/containers/gke/hello-app:2.0'
    #- '.'
  #dir: 'hello-app'

# Push images.
#images:
 # - 'gcr.io/google-samples/hello-app:1.1'
 # - 'us-docker.pkg.dev/google-samples/containers/gke/hello-app:1.1'
 # - 'gcr.io/google-samples/hello-app:2.0'
 # - 'us-docker.pkg.dev/google-samples/containers/gke/hello-app:2.0'
